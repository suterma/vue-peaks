{"version":3,"file":"vue-peaks.js","sources":["../src/components/AudioPeaks.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, shallowRef, onMounted } from 'vue';\nimport Peaks from 'peaks.js';\n\nconst props = defineProps<{\n  /** The audio source URL (for the \"simple\" mode)\n   * @remarks This URL is to be used internally with the default media slot \n   * (no slot template or external media element id is expected)\n   */\n  src?: string;\n\n  /** The unique identifier of this component\n   * @remarks Required, if you have more than one instance of a\n   * Peaks.js component in the HTML document.\n   */\n  id?: string;\n\n  /** The unique identifier of an external media element to use. (for the \"external\" mode)\n * @remarks Allows the use of an external media element.\n * (no slot template or audio source URL is expected)\n */\n  mediaElementId?: string;\n\n  /** The peaks options MUST NOT be deeply reactive for performance reasons.\n   * @devdoc See the notes aboout performance with the peaksInstance property\n   */\n  options?: Peaks.PeaksOptions;\n}>();\n\n/** The peaks instance MUST NOT be deeply reactive for performance reasons.\n * @devdoc See https://github.com/bbc/peaks.js/issues/406#issuecomment-1225885020 in peaks.js\n * and this documentation https://vuejs.org/api/reactivity-advanced.html#shallowref about shallow references\n */\nconst peaksInstance = shallowRef<Peaks.PeaksInstance | undefined>(undefined);\nconst zoomInButton = shallowRef(null);\nconst zoomOutButton = shallowRef(null);\nconst zoomLevel = ref<number | undefined>(undefined);\n\nonMounted(() => {\n\n  //TODO add a warning when not all required propreties (src, id) are set.\n  createPeaksInstance();\n});\n\n/** Initializes the peaks instance\n * @remarks If no options are provided by the respective component property, some default options are used.\n * @devdoc Must be called only after mount, because the expected HTML elements must be addressable already by their id.\n * @devdoc A currently unused variant for referencing an audio element from the template via reference uses\n * // reference on the component level\n * const audio = shallowRef(null);\n * // getting the element\n * (audio.value as unknown as HTMLAudioElement)\n */\nfunction createPeaksInstance() {\n  const defaultOptions: Peaks.PeaksOptions = {\n    containers: {\n      overview: document.getElementById('overview-' + props.id),\n      zoomview: document.getElementById('zoomview-' + props.id),\n    },\n    /* Either use the audio element from inside the default slot, if available; otherwise get the audio element by id */\n    mediaElement:\n      document.getElementById('' + props.id)?.getElementsByTagName('audio')[0] ??\n      (document.getElementById('' + props.mediaElementId) ?? undefined),\n    webAudio: {\n      audioContext: new AudioContext(),\n    },\n    zoomLevels: [256, 512, 1024, 2048, 4096],\n  };\n\n  Peaks.init(\n    props.options ? props.options : defaultOptions,\n    function (err, peaks) {\n      console.log(err, peaks);\n      peaksInstance.value = peaks;\n      zoomLevel.value = peaks?.zoom.getZoom();\n    }\n  );\n}\n\nfunction zoomIn() {\n  peaksInstance.value?.zoom.zoomIn();\n  zoomLevel.value = peaksInstance.value?.zoom.getZoom();\n}\nfunction zoomOut() {\n  peaksInstance.value?.zoom.zoomOut();\n  zoomLevel.value = peaksInstance.value?.zoom.getZoom();\n}\n</script>\n\n<template>\n  <div :id=\"'' + props.id\">\n    <slot name=\"overview\">\n      <div class=\"peaks-overview\" :id=\"'overview-' + props.id\" ref=\"overview\"></div>\n    </slot>\n    <slot name=\"zoomview\">\n      <div class=\"peaks-zoomview\" :id=\"'zoomview-' + props.id\" ref=\"zoomview\"></div>\n    </slot>\n    <!-- If an external media element is reference, the default slot is not used -->\n    <slot name=\"default\" v-if=\"!props.mediaElementId\">\n      <!-- The default content slot for the \"slot\" mode -->\n      <audio class=\"peaks-audio\" :id=\"props.id\" ref=\"audio\" controls>\n        <source :src=\"src\" />\n      </audio>\n    </slot>\n    <slot name=\"controls\">\n      <div class=\"peaks-controls\">\n        <button ref=\"zoomInButton\" @click=\"zoomIn()\">\n          Zoom in</button>&nbsp;\n        <button ref=\"zoomOutButton\" @click=\"zoomOut()\">\n          Zoom out</button>&nbsp;\n        <span>Zoom level: {{ zoomLevel }}</span>\n      </div>\n    </slot>\n  </div>\n</template>\n\n<style scoped>\n.peaks-audio,\n.peaks-overview,\n.peaks-zoomview {\n  width: 100%;\n}\n\n.peaks-overview,\n.peaks-zoomview {\n  height: 100px;\n}\n</style>\n"],"names":["peaksInstance","shallowRef","zoomInButton","zoomOutButton","zoomLevel","ref","onMounted","createPeaksInstance","defaultOptions","props","_c","_a","_b","Peaks","err","peaks","zoomIn","zoomOut"],"mappings":";;;;;;;;;;;iBAiCMA,IAAgBC,EAA4C,MAAS,GACrEC,IAAeD,EAAW,IAAI,GAC9BE,IAAgBF,EAAW,IAAI,GAC/BG,IAAYC,EAAwB,MAAS;AAEnD,IAAAC,EAAU,MAAM;AAGM,MAAAC;IAAA,CACrB;AAWD,aAASA,IAAsB;;AAC7B,YAAMC,IAAqC;AAAA,QACzC,YAAY;AAAA,UACV,UAAU,SAAS,eAAe,cAAcC,EAAM,EAAE;AAAA,UACxD,UAAU,SAAS,eAAe,cAAcA,EAAM,EAAE;AAAA,QAC1D;AAAA,QAEA,eACEC,KAAAC,IAAA,SAAS,eAAe,KAAKF,EAAM,EAAE,MAArC,gBAAAE,EAAwC,qBAAqB,SAAS,OAAtE,OAAAD,KACCE,IAAA,SAAS,eAAe,KAAKH,EAAM,cAAc,MAAjD,OAAAG,IAAsD;AAAA,QACzD,UAAU;AAAA,UACR,cAAc,IAAI,aAAa;AAAA,QACjC;AAAA,QACA,YAAY,CAAC,KAAK,KAAK,MAAM,MAAM,IAAI;AAAA,MAAA;AAGnC,MAAAC,EAAA;AAAA,QACJJ,EAAM,UAAUA,EAAM,UAAUD;AAAA,QAChC,SAAUM,GAAKC,GAAO;AACZ,kBAAA,IAAID,GAAKC,CAAK,GACtBf,EAAc,QAAQe,GACZX,EAAA,QAAQW,KAAA,gBAAAA,EAAO,KAAK;AAAA,QAChC;AAAA,MAAA;AAAA,IAEJ;AAEA,aAASC,IAAS;;AACF,OAAAL,IAAAX,EAAA,UAAA,QAAAW,EAAO,KAAK,UAC1BP,EAAU,SAAQQ,IAAAZ,EAAc,UAAd,gBAAAY,EAAqB,KAAK;AAAA,IAC9C;AACA,aAASK,IAAU;;AACH,OAAAN,IAAAX,EAAA,UAAA,QAAAW,EAAO,KAAK,WAC1BP,EAAU,SAAQQ,IAAAZ,EAAc,UAAd,gBAAAY,EAAqB,KAAK;AAAA,IAC9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}